import React from 'react';
import {
  Card,
  CardContent,
  CardMedia,
  Typography,
  IconButton,
  CardActions,
  Box,
  Tooltip,
} from '@mui/material';
import { useNavigate } from 'react-router-dom';
import FavoriteIcon from '@mui/icons-material/Favorite';
import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';
import InfoIcon from '@mui/icons-material/Info';
import { useFavorites } from '../context/FavoritesContext';

const BookCard = ({ book }) => {
  const navigate = useNavigate();
  const { isFavorite, toggleFavorite } = useFavorites();
  const {
    id,
    volumeInfo: {
      title,
      authors = ['Unknown Author'],
      description = 'No description available',
      imageLinks = {},
    } = {},
  } = book;

  const handleFavoriteClick = (e) => {
    e.stopPropagation();
    toggleFavorite(book);
  };

  const truncateText = (text, maxLength) => {
    if (text.length <= maxLength) return text;
    return text.substr(0, maxLength) + '...';
  };

  return (
    <Card 
      sx={{ 
        height: '100%', 
        display: 'flex', 
        flexDirection: 'column',
        transition: 'all 0.3s ease',
        '&:hover': {
          transform: 'translateY(-8px)',
          boxShadow: (theme) => theme.shadows[8],
          '& .MuiCardMedia-root': {
            transform: 'scale(1.05)'
          }
        },
        borderRadius: 2,
        overflow: 'hidden',
        position: 'relative',
        width: '100%',
        bgcolor: (theme) => theme.palette.background.paper,
      }}
    >
      <Box sx={{ position: 'relative', paddingTop: '140%', bgcolor: 'grey.100' }}>
        <CardMedia
          component="img"
          image={imageLinks.thumbnail || '/book-placeholder.png'}
          alt={title}
          className="MuiCardMedia-root"
          sx={{ 
            position: 'absolute',
            top: 0,
            left: 0,
            width: '100%',
            height: '100%',
            objectFit: 'cover',
            transition: 'transform 0.3s ease',
          }}
        />
      </Box>
      <CardContent sx={{ flexGrow: 1, p: 2.5 }}>
        <Typography 
          gutterBottom 
          variant="h6" 
          component="h2" 
          sx={{ 
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            display: '-webkit-box',
            WebkitLineClamp: 2,
            WebkitBoxOrient: 'vertical',
            lineHeight: 1.2,
            height: '2.4em',
            fontWeight: 600,
            mb: 1
          }}
        >
          {title}
        </Typography>
        <Typography 
          variant="subtitle2" 
          color="text.secondary" 
          gutterBottom
          sx={{
            mb: 1.5,
            fontStyle: 'italic'
          }}
        >
          {authors.join(', ')}
        </Typography>
        <Typography 
          variant="body2" 
          color="text.secondary" 
          sx={{
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            display: '-webkit-box',
            WebkitLineClamp: 3,
            WebkitBoxOrient: 'vertical',
            lineHeight: 1.5
          }}
        >
          {truncateText(description, 150)}
        </Typography>
      </CardContent>
      <CardActions sx={{ justifyContent: 'space-between', px: 2, pb: 2 }}>
        <Tooltip title={isFavorite(id) ? "Remove from favorites" : "Add to favorites"}>
          <IconButton 
            onClick={handleFavoriteClick}
            color="secondary"
            aria-label={isFavorite(id) ? "Remove from favorites" : "Add to favorites"}
          >
            {isFavorite(id) ? <FavoriteIcon /> : <FavoriteBorderIcon />}
          </IconButton>
        </Tooltip>
        <Tooltip title="View details">
          <IconButton 
            onClick={() => navigate(`/book/${id}`)}
            color="primary"
            aria-label="View book details"
          >
            <InfoIcon />
          </IconButton>
        </Tooltip>
      </CardActions>
    </Card>
  );
};

export default BookCard;