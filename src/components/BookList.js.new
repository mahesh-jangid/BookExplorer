import React from 'react';
import { Grid, Typography, Box, useTheme, Container, Skeleton } from '@mui/material';
import { motion, AnimatePresence } from 'framer-motion';
import BookCard from './BookCard';

// Animation variants for list items
const containerVariants = {
  hidden: { opacity: 0 },
  show: {
    opacity: 1,
    transition: {
      staggerChildren: 0.1
    }
  }
};

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  show: { opacity: 1, y: 0 }
};

const BookList = ({ books = [], loading = false }) => {
  const theme = useTheme();

  const LoadingSkeleton = () => (
    <Grid container spacing={3}>
      {Array.from({ length: 6 }).map((_, index) => (
        <Grid item xs={12} sm={6} md={4} key={index} sx={{ display: 'flex' }}>
          <Box 
            sx={{ 
              width: '100%',
              display: 'flex',
              flexDirection: 'column',
              bgcolor: 'background.paper',
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: 1
            }}
          >
            <Skeleton 
              variant="rectangular" 
              height={300} 
              sx={{ 
                transform: 'none',
                bgcolor: 'grey.100'
              }}
            />
            <Box sx={{ p: 2 }}>
              <Skeleton variant="text" height={32} sx={{ transform: 'none' }} />
              <Skeleton variant="text" height={24} width="60%" sx={{ transform: 'none' }} />
              <Skeleton variant="text" height={60} sx={{ transform: 'none' }} />
            </Box>
          </Box>
        </Grid>
      ))}
    </Grid>
  );

  return (
    <Container 
      maxWidth="lg" 
      sx={{ 
        py: { xs: 2, sm: 3, md: 4 },
        px: { xs: 2, sm: 3 }
      }}
    >
      <AnimatePresence mode="wait">
        <motion.div
          key={`books-${books.length}`}
          variants={containerVariants}
          initial="hidden"
          animate="show"
          exit="hidden"
        >
          {loading ? (
            <LoadingSkeleton />
          ) : !books.length ? (
            <Box 
              textAlign="center" 
              py={4}
              sx={{
                background: theme.palette.background.paper,
                borderRadius: 2,
                p: 4,
                boxShadow: theme.shadows[1],
              }}
            >
              <Typography variant="h6" color="text.secondary" gutterBottom>
                No books found
              </Typography>
              <Typography variant="body1" color="text.secondary">
                Try adjusting your search terms or browse our recommendations
              </Typography>
            </Box>
          ) : (
            <Grid 
              container 
              spacing={3}
              sx={{
                display: 'grid',
                gridTemplateColumns: {
                  xs: '1fr',
                  sm: 'repeat(2, 1fr)',
                  md: 'repeat(3, 1fr)'
                },
                gap: 3,
                alignItems: 'stretch'
              }}
            >
              {books.map((book, index) => (
                <Grid
                  item
                  key={book.id || index}
                  sx={{
                    width: '100%',
                    height: '100%'
                  }}
                >
                  <motion.div
                    variants={itemVariants}
                    style={{
                      height: '100%',
                      display: 'flex'
                    }}
                  >
                    <BookCard book={book} />
                  </motion.div>
                </Grid>
              ))}
            </Grid>
          )}
        </motion.div>
      </AnimatePresence>
    </Container>
  );
};

export default BookList;